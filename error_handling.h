#ifndef ERROR_HANDLING_H
#define ERROR_HANDLING_H

/* Define error codes */
#define ERROR_NONE 0
#define ERROR_INVALID_INPUT 1
#define ERROR_OUT_OF_RANGE 2
#define ERROR_STEP_TOO_LARGE 3
#define ZERO_DEVISION_ERROR 4
#define INVALID_CHARACTER_DETECTED 5
#define INVALID_CHOICE 6
#define INVALID_HEXADECIMAL 7
#define INPUT_UNDERFLOW 8
#define POSITION_OUT_OF_RANGE 9
#define NBITS_OUT_OF_RANGE 10
#define INVALID_BIT_POSITION 11
#define ERROR_ROTATION_TOO_LARGE 12
#define ERROR_STRING_TOO_LONG 13
#define ERROR_INVALID_NOTATION 14
#define ERROR_NON_ALPHANUMERIC 15
#define ERROR_INVALID_DASH_PLACEMENT 16
#define ERROR_EMPTY_INPUT 17
#define ERROR_INVALID_BASE 18
#define ERROR_INVALID_WIDTH 19

/* Function prototypes*/
void handle_error(int error_code);

#endif /* ERROR_HANDLING_H */
